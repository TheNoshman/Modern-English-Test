{"version":3,"sources":["routes/Home.js","serviceAPI.js","routes/Value.js","routes/Convert.js","routes/NotFound.js","routes/Routes.js","views/navigation/Navigation.js","views/Layout.js","App.js","index.js"],"names":["Home","history","useHistory","Container","Row","Col","Button","onClick","push","style","marginRight","getBitcoinValueAPI","a","fetch","then","result","status","Promise","reject","json","catch","err","console","log","message","getBitcoinConversionAPI","currency","value","Value","useState","bitcoinValue","setBitcoinValue","loading","setLoading","selected","setSelected","useEffect","updateState","Spinner","animation","role","className","FloatingLabel","controlId","label","marginTop","marginBottom","Form","Select","Object","keys","map","el","i","ListGroup","Item","buy","Convert","amount","setAmount","show","setShow","calc","setCalc","handleSubmit","number","Number","parseFloat","replaceAll","isNaN","parseInt","md","onChange","nativeEvent","target","Alert","variant","Heading","InputGroup","hasValidation","Text","Control","type","required","v","Feedback","xs","placeholder","readOnly","NotFound","to","Routes","path","exact","component","Navigation","Navbar","bg","expand","Brand","Toggle","Layout","App","createBrowserHistory","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9516ee09.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\n// Homepage\n\nconst Home = () => {\n  const history = useHistory();\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1>Modern English Interview Project</h1>\n          <h6>By Chris Norish</h6>\n          <p>Please select a function:</p>\n          <hr />\n          <Button\n            onClick={() => history.push('/value')}\n            style={{ marginRight: '1rem' }}\n          >\n            Check Bitcoin Value\n          </Button>\n          <Button onClick={() => history.push('/convert')}>\n            Convert into Bitcoin\n          </Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Home;\n","const valueURL = 'https://blockchain.info/ticker';\n\nexport const getBitcoinValueAPI = async () => {\n  return fetch(valueURL)\n    .then((result) => (result.status <= 400 ? result : Promise.reject(result)))\n    .then((result) => result.json())\n    .catch((err) => {\n      console.log(`getBitcoinValueAPI ERROR - ${err.message}`);\n    });\n};\n\nconst convertURL = 'https://blockchain.info/tobtc?';\nexport const getBitcoinConversionAPI = async (currency, value) => {\n  return fetch(`${convertURL}currency=${currency}&value=${value}`)\n    .then((result) => (result.status <= 400 ? result : Promise.reject(result)))\n    .then((result) => result.json())\n    .catch((err) => {\n      console.log(`getBitcoinConversionAPI ERROR - ${err.message}`);\n    });\n};\n","import React, { useEffect, useState } from 'react';\nimport { getBitcoinValueAPI } from '../serviceAPI';\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Spinner,\n  FloatingLabel,\n  ListGroup,\n  Form,\n} from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nexport default function Value() {\n  // Local state management\n  const [bitcoinValue, setBitcoinValue] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [selected, setSelected] = useState('AUD');\n  const history = useHistory();\n\n  // On render, get Bitcoin value\n  useEffect(() => {\n    (async () => {\n      const result = await getBitcoinValueAPI();\n      setBitcoinValue(result);\n      setLoading(false);\n    })();\n  }, [selected]);\n\n  // Refresh API handler\n  const updateState = async () => {\n    setLoading(true);\n    setBitcoinValue(await getBitcoinValueAPI());\n    setLoading(false);\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1>Check Bitcoin Value</h1>\n          {loading ? (\n            <Col>\n              <Spinner animation='border' role='status'>\n                <span className='visually-hidden'>Loading...</span>\n              </Spinner>\n            </Col>\n          ) : (\n            <Col>\n              <FloatingLabel\n                controlId='floatingSelectGrid'\n                label='Select currency'\n                style={{ marginTop: '1rem', marginBottom: '1rem' }}\n              >\n                <Form.Select aria-label='Floating label select example'>\n                  {Object.keys(bitcoinValue).map((el, i) => {\n                    return (\n                      <option\n                        key={i}\n                        value={el}\n                        onClick={() => setSelected(el)}\n                      >\n                        {el}\n                      </option>\n                    );\n                  })}\n                </Form.Select>\n              </FloatingLabel>\n              <Row>\n                <hr />\n                <ListGroup>\n                  <ListGroup.Item>\n                    Buy @ {bitcoinValue[selected].buy}\n                  </ListGroup.Item>\n                  <ListGroup.Item style={{ marginBottom: '1rem' }}>\n                    Sell @ {bitcoinValue[selected].buy}\n                  </ListGroup.Item>\n                </ListGroup>\n              </Row>\n            </Col>\n          )}\n          <Button style={{ marginRight: '1rem' }} onClick={() => updateState()}>\n            Refresh\n          </Button>\n\n          <Button onClick={() => history.push('/')}>Back</Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { getBitcoinValueAPI, getBitcoinConversionAPI } from '../serviceAPI';\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Spinner,\n  FloatingLabel,\n  Form,\n  InputGroup,\n  Alert,\n} from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nexport default function Convert() {\n  // Local state management instantiation\n  const [bitcoinValue, setBitcoinValue] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [selected, setSelected] = useState('AUD');\n  const [amount, setAmount] = useState(0);\n  const [show, setShow] = useState(false);\n  const [calc, setCalc] = useState(0);\n  const history = useHistory();\n\n  // On render, get Bitcoin value to populate conversion currency options in dropdown\n  useEffect(() => {\n    (async () => {\n      setBitcoinValue(await getBitcoinValueAPI());\n      setLoading(false);\n    })();\n  }, []);\n\n  // Submit handler w/ error handling\n  const handleSubmit = async () => {\n    const number = Number.parseFloat(amount.replaceAll(/\\s/g, ''));\n    if (Number.isNaN(number) || number < 1) {\n      setShow(true);\n      return;\n    }\n    setCalc(await getBitcoinConversionAPI(selected, parseInt(amount)));\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1>Convert Bitcoin Into Currency</h1>\n          {loading ? (\n            <Col>\n              <Spinner animation='border' role='status'>\n                <span className='visually-hidden'>Loading...</span>\n              </Spinner>\n            </Col>\n          ) : (\n            <Col md>\n              <FloatingLabel\n                controlId='floatingSelectGrid'\n                label='Select currency'\n                style={{ marginTop: '1rem', marginBottom: '1rem' }}\n              >\n                <Form.Select\n                  aria-label='Floating label select example'\n                  onChange={(el) => setSelected(el.nativeEvent.target.value)}\n                >\n                  {Object.keys(bitcoinValue).map((el, i) => {\n                    return (\n                      <option key={i} value={el}>\n                        {el}\n                      </option>\n                    );\n                  })}\n                </Form.Select>\n              </FloatingLabel>\n              <Alert show={show} variant='danger'>\n                <Alert.Heading>Uh oh!</Alert.Heading>\n                <p>Please enter a valid amount</p>\n                <hr />\n                <div className='d-flex justify-content-end'>\n                  <Button\n                    onClick={() => setShow(false)}\n                    variant='outline-danger'\n                  >\n                    Close\n                  </Button>\n                </div>\n              </Alert>\n              <Col md>\n                <InputGroup hasValidation>\n                  <InputGroup.Text>Amount</InputGroup.Text>\n\n                  <Form.Control\n                    type='number'\n                    required\n                    onChange={(v) => {\n                      setAmount(v.nativeEvent.target.value);\n                    }}\n                    value={amount}\n                  />\n                  <Form.Control.Feedback type='invalid'>\n                    Please enter a valid number.\n                  </Form.Control.Feedback>\n                </InputGroup>\n              </Col>\n              <Col>\n                <hr />\n                <Col xs='auto'>\n                  <InputGroup className='mb-2'>\n                    <InputGroup.Text>₿</InputGroup.Text>\n                    <Form.Control\n                      type='text'\n                      placeholder='Readonly input here...'\n                      value={calc}\n                      readOnly\n                    />\n                  </InputGroup>\n                </Col>\n                <hr />\n              </Col>\n            </Col>\n          )}\n          <Button\n            variant='outline-primary'\n            style={{ marginRight: '1rem' }}\n            type='submit'\n            onClick={() => handleSubmit()}\n          >\n            Submit\n          </Button>\n          <Button onClick={() => history.push('/')}>Back</Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\n// Error handling component\nconst NotFound = () => {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1>Page not found</h1>\n          <hr />\n          <LinkContainer to='/'>\n            <Button>Return to Home</Button>\n          </LinkContainer>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './Home';\nimport Value from './Value';\nimport Convert from './Convert';\nimport NotFound from './NotFound';\n\n// Navigation routes w/ error handling\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route path='/' exact component={Home} />\n      <Route path='/value' component={Value} />\n      <Route path='/convert' component={Convert} />\n      <Route path='/' component={NotFound} />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport { Container, Row, Col, Navbar } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\n// Navbar component, links to homepage on click\n\nconst Navigation = () => {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Navbar bg='light' expand='lg'>\n            <LinkContainer to='/'>\n              <Navbar.Brand>Bitcoin React Application</Navbar.Brand>\n            </LinkContainer>\n            <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          </Navbar>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport Routes from '../routes/Routes';\nimport Navigation from './navigation/Navigation';\n\n// Navbar and routes\nconst Layout = () => {\n  return (\n    <>\n      <Navigation />\n      <Routes />\n    </>\n  );\n};\n\nexport default Layout;\n","import './css/App.css';\nimport { createBrowserHistory } from 'history';\nimport { Router } from 'react-router-dom';\nimport Layout from './views/Layout';\n\nfunction App() {\n  const history = createBrowserHistory();\n  return (\n    <Router history={history}>\n      <Layout />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n// React Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}